[{"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\index.js":"1","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\App.js":"3","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Footer.js":"4","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Login.js":"5","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Applications.js":"6","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Home.js":"7","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Logout.js":"8","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Profile.js":"9","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Signup.js":"10","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Navbar.js":"11","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\lib\\MessagePopup.js":"12","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\recruiter\\JobApplications.js":"13","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\recruiter\\CreateJobs.js":"14","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\lib\\isAuth.js":"15","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\recruiter\\AcceptedApplicants.js":"16","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\recruiter\\Profile.js":"17","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\recruiter\\MyJobs.js":"18","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Welcome.js":"19","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\lib\\apiList.js":"20","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\lib\\PasswordInput.js":"21","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\lib\\FileUploadInput.js":"22","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\lib\\EmailInput.js":"23","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\Hooks\\useAnimations.js":"24","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\services.js":"25","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\servicecard.js":"26","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Wave.js":"27","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\data\\ServiceCardsData.js":"28","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\Hooks\\useScroll.js":"29","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\query.js":"30","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\data\\AccordionData.js":"31","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\AccordionItem.js":"32","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\agent.js":"33","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\recruteragent.js":"34","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\ai-interview.js":"35","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\resume.js":"36"},{"size":500,"mtime":1728195834043,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1728195834106,"results":"39","hashOfConfig":"38"},{"size":3552,"mtime":1730643624000,"results":"40","hashOfConfig":"38"},{"size":4786,"mtime":1728233179207,"results":"41","hashOfConfig":"38"},{"size":4011,"mtime":1730822387922,"results":"42","hashOfConfig":"38"},{"size":7269,"mtime":1728290401129,"results":"43","hashOfConfig":"38"},{"size":22069,"mtime":1730820735019,"results":"44","hashOfConfig":"38"},{"size":497,"mtime":1730642256967,"results":"45","hashOfConfig":"38"},{"size":8221,"mtime":1728200218359,"results":"46","hashOfConfig":"38"},{"size":14550,"mtime":1730822466761,"results":"47","hashOfConfig":"38"},{"size":8975,"mtime":1730816956527,"results":"48","hashOfConfig":"38"},{"size":496,"mtime":1728197859349,"results":"49","hashOfConfig":"38"},{"size":22538,"mtime":1728552495702,"results":"50","hashOfConfig":"38"},{"size":8117,"mtime":1728552481280,"results":"51","hashOfConfig":"38"},{"size":165,"mtime":1728195835360,"results":"52","hashOfConfig":"38"},{"size":24290,"mtime":1728288120435,"results":"53","hashOfConfig":"38"},{"size":4999,"mtime":1728195834969,"results":"54","hashOfConfig":"38"},{"size":26040,"mtime":1730821020276,"results":"55","hashOfConfig":"38"},{"size":5688,"mtime":1730816387814,"results":"56","hashOfConfig":"38"},{"size":450,"mtime":1730638748152,"results":"57","hashOfConfig":"38"},{"size":1666,"mtime":1728195835235,"results":"58","hashOfConfig":"38"},{"size":3279,"mtime":1728195835125,"results":"59","hashOfConfig":"38"},{"size":1167,"mtime":1728195835047,"results":"60","hashOfConfig":"38"},{"size":2481,"mtime":1728218132948,"results":"61","hashOfConfig":"38"},{"size":3100,"mtime":1728395962540,"results":"62","hashOfConfig":"38"},{"size":1109,"mtime":1728395952478,"results":"63","hashOfConfig":"38"},{"size":945,"mtime":1728395452003,"results":"64","hashOfConfig":"38"},{"size":1195,"mtime":1728395041509,"results":"65","hashOfConfig":"38"},{"size":514,"mtime":1728395454756,"results":"66","hashOfConfig":"38"},{"size":2179,"mtime":1728396265020,"results":"67","hashOfConfig":"38"},{"size":1119,"mtime":1728395741862,"results":"68","hashOfConfig":"38"},{"size":1394,"mtime":1728396078121,"results":"69","hashOfConfig":"38"},{"size":8160,"mtime":1730818768913,"results":"70","hashOfConfig":"38"},{"size":7486,"mtime":1730818990091,"results":"71","hashOfConfig":"38"},{"size":13144,"mtime":1730818067696,"results":"72","hashOfConfig":"38"},{"size":12016,"mtime":1730821552595,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"18mp7kw",{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\index.js",[],["149","150"],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\App.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Footer.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Login.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Applications.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Home.js",["151"],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Logout.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Profile.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Signup.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Navbar.js",["152","153"],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\lib\\MessagePopup.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\recruiter\\JobApplications.js",["154","155"],"import {\n  Avatar,\n  Button,\n  Checkbox,\n  Chip,\n  FormControlLabel,\n  Grid,\n  IconButton,\n  makeStyles,\n  Modal,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\nimport { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList, { server } from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"80%\",\n  },\n  button: {\n    padding: '5px 15px',\n    fontSize: '0.875rem',\n    borderRadius: '20px',\n    backgroundColor: '#3f51b5',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: '#303f9f',\n    },\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  avatar: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n  statusBlock: {\n    padding: '10px 20px',\n    fontSize: '0.875rem',\n    borderRadius: '20px',\n    color: '#ffffff',\n    '&.shortlisted': {\n      backgroundColor: '#3f51b5',\n      '&:hover': {\n        backgroundColor: '#303f9f',\n      },\n    },\n    '&.rejected': {\n      backgroundColor: '#f44336',\n      '&:hover': {\n        backgroundColor: '#d32f2f',\n      },\n    },\n    '&.accepted': {\n      backgroundColor: '#4caf50',\n      '&:hover': {\n        backgroundColor: '#388e3c',\n      },\n    },\n    '&.cancelled': {\n      backgroundColor: '#ff9800',\n      '&:hover': {\n        backgroundColor: '#f57c00',\n      },\n    },\n    '&.finished': {\n      backgroundColor: '#9e9e9e',\n      '&:hover': {\n        backgroundColor: '#757575',\n      },\n    },\n  },\n  smallButton: {\n    padding: '5px',\n    fontSize: '0.875rem',\n    borderRadius: '50%',\n    backgroundColor: '#3f51b5',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: '#303f9f',\n    },\n  },\n}));\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Application Status\n            </Grid>\n            <Grid\n              container\n              item\n              xs={9}\n              justify=\"space-around\"\n              // alignItems=\"center\"\n            >\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"rejected\"\n                      checked={searchOptions.status.rejected}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Rejected\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"applied\"\n                      checked={searchOptions.status.applied}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Applied\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"shortlisted\"\n                      checked={searchOptions.status.shortlisted}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Shortlisted\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"name\"\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"name\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"name\">\n                    <Typography>Name</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"dateOfApplication\"\n                    checked={searchOptions.sort.dateOfApplication.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfApplication: {\n                            ...searchOptions.sort.dateOfApplication,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"dateOfApplication\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"dateOfApplication\">\n                    <Typography>Date of Application</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.dateOfApplication.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfApplication: {\n                            ...searchOptions.sort.dateOfApplication,\n                            desc: !searchOptions.sort.dateOfApplication.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.dateOfApplication.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\n                              .desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst ApplicationTile = (props) => {\n  const classes = useStyles();\n  const { application, getData } = props;\n  const setPopup = useContext(SetPopupContext);\n  const [open, setOpen] = useState(false);\n\n  const appliedOn = new Date(application.dateOfApplication);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const colorSet = {\n    applied: \"#3454D1\",\n    shortlisted: \"#DC851F\",\n    accepted: \"#09BC8A\",\n    rejected: \"#D1345B\",\n    deleted: \"#B49A67\",\n    cancelled: \"#FF8484\",\n    finished: \"#4EA5D9\",\n  };\n\n  const getResume = () => {\n    if (application.jobApplicant.resume && application.jobApplicant.resume !== \"\") {\n      const address = `${server}/api/download/resume/${application.jobApplicant.resume}`;\n      console.log(address);\n      axios(address, {\n        method: \"GET\",\n        responseType: \"blob\",\n      })\n        .then((response) => {\n          const file = new Blob([response.data], { type: \"application/pdf\" });\n          const fileURL = URL.createObjectURL(file);\n          window.open(fileURL);\n        })\n        .catch((error) => {\n          console.log(error);\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: \"Error downloading resume\",\n          });\n        });\n    } else {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"No resume found\",\n      });\n    }\n  };\n\n  const updateStatus = (status) => {\n    const address = `${apiList.applications}/${application._id}`;\n    const statusData = {\n      status: status,\n      dateOfJoining: new Date().toISOString(),\n    };\n    axios\n      .put(address, statusData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  const buttonSet = {\n    applied: (\n      <>\n        <Grid item xs>\n          <Button\n            className={`${classes.statusBlock} shortlisted`}\n            onClick={() => updateStatus(\"shortlisted\")}\n          >\n            Shortlist\n          </Button>\n        </Grid>\n        <Grid item xs>\n          <Button\n            className={`${classes.statusBlock} rejected`}\n            onClick={() => updateStatus(\"rejected\")}\n          >\n            Reject\n          </Button>\n        </Grid>\n      </>\n    ),\n    shortlisted: (\n      <>\n        <Grid item xs>\n          <Button\n            className={`${classes.statusBlock} accepted`}\n            onClick={() => updateStatus(\"accepted\")}\n          >\n            Accept\n          </Button>\n        </Grid>\n        <Grid item xs>\n          <Button\n            className={`${classes.statusBlock} rejected`}\n            onClick={() => updateStatus(\"rejected\")}\n          >\n            Reject\n          </Button>\n        </Grid>\n      </>\n    ),\n    rejected: (\n      <>\n        <Grid item xs>\n          <Paper className={`${classes.statusBlock} rejected`}>\n            Rejected\n          </Paper>\n        </Grid>\n      </>\n    ),\n    accepted: (\n      <>\n        <Grid item xs>\n          <Paper className={`${classes.statusBlock} accepted`}>\n            Accepted\n          </Paper>\n        </Grid>\n      </>\n    ),\n    cancelled: (\n      <>\n        <Grid item xs>\n          <Paper className={`${classes.statusBlock} cancelled`}>\n            Cancelled\n          </Paper>\n        </Grid>\n      </>\n    ),\n    finished: (\n      <>\n        <Grid item xs>\n          <Paper className={`${classes.statusBlock} finished`}>\n            Finished\n          </Paper>\n        </Grid>\n      </>\n    ),\n  };\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid\n          item\n          xs={2}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar\n            src={`${server}${application.jobApplicant.profile}`}\n            className={classes.avatar}\n          />\n        </Grid>\n        <Grid container item xs={7} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">\n              {application.jobApplicant.name}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Rating\n              value={\n                application.jobApplicant.rating !== -1\n                  ? application.jobApplicant.rating\n                  : null\n              }\n              readOnly\n            />\n          </Grid>\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\n          <Grid item>\n            Education:{\" \"}\n            {application.jobApplicant.education\n              .map((edu) => {\n                return `${edu.institutionName} (${edu.startYear}-${\n                  edu.endYear ? edu.endYear : \"Ongoing\"\n                })`;\n              })\n              .join(\", \")}\n          </Grid>\n          <Grid item>\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\n          </Grid>\n          <Grid item>\n            {application.jobApplicant.skills.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              className={classes.statusBlock}\n              color=\"primary\"\n              onClick={() => getResume()}\n            >\n              Download Resume\n            </Button>\n          </Grid>\n          <Grid item container xs>\n            {buttonSet[application.status]}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            // onClick={() => changeRating()}\n          >\n            Submit\n          </Button>\n        </Paper>\n      </Modal>\n    </Paper>\n  );\n};\n\nconst JobApplications = (props) => {\n    const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n  const [applications, setApplications] = useState([]);\n  const { jobId } = useParams();\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    status: {\n      all: false,\n      applied: false,\n      shortlisted: false,\n    },\n    sort: {\n      \"jobApplicant.name\": {\n        status: false,\n        desc: false,\n      },\n      dateOfApplication: {\n        status: true,\n        desc: true,\n      },\n      \"jobApplicant.rating\": {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  const getData = useCallback(() => {\n    let searchParams = [];\n\n    if (searchOptions.status.rejected) {\n      searchParams = [...searchParams, `status=rejected`];\n    }\n    if (searchOptions.status.applied) {\n      searchParams = [...searchParams, `status=applied`];\n    }\n    if (searchOptions.status.shortlisted) {\n      searchParams = [...searchParams, `status=shortlisted`];\n    }\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = `${apiList.applicants}?jobId=${jobId}`;\n    if (queryString !== \"\") {\n      address = `${address}&${queryString}`;\n    }\n\n    console.log(address);\n\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setApplications(response.data);\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setApplications([]);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n      });\n  }, [searchOptions, jobId, setPopup]);\n\n  useEffect(() => {\n    getData();\n  }, [getData]);\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\">Applications</Typography>\n        </Grid>\n        <Grid item>\n          <IconButton className={classes.smallButton} onClick={() => setFilterOpen(true)}>\n            <FilterListIcon />\n          </IconButton>\n        </Grid>\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          style={{ width: \"100%\" }}\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {applications.length > 0 ? (\n            applications.map((obj) => (\n              <Grid item>\n                {/* {console.log(obj)} */}\n                <ApplicationTile application={obj} getData={getData} />\n              </Grid>\n            ))\n          ) : (\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\n              No Applications Found\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n      <FilterPopup\n        open={filterOpen}\n        searchOptions={searchOptions}\n        setSearchOptions={setSearchOptions}\n        handleClose={() => setFilterOpen(false)}\n        getData={() => {\n          getData();\n          setFilterOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default JobApplications;","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\recruiter\\CreateJobs.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\lib\\isAuth.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\recruiter\\AcceptedApplicants.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\recruiter\\Profile.js",["156","157","158"],"import { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n}));\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [profileDetails, setProfileDetails] = useState({\n    name: \"\",\n    bio: \"\",\n    contactNumber: \"\",\n  });\n\n  const [phone, setPhone] = useState(\"\");\n\n  const handleInput = (key, value) => {\n    setProfileDetails({\n      ...profileDetails,\n      [key]: value,\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.user, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setProfileDetails(response.data);\n        setPhone(response.data.contactNumber);\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  const handleUpdate = () => {\n    let updatedDetails = {\n      ...profileDetails,\n    };\n    if (phone !== \"\") {\n      updatedDetails = {\n        ...profileDetails,\n        contactNumber: `+${phone}`,\n      };\n    } else {\n      updatedDetails = {\n        ...profileDetails,\n        contactNumber: \"\",\n      };\n    }\n\n    axios\n      .put(apiList.user, updatedDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\">Profile</Typography>\n        </Grid>\n        <Grid item xs style={{ width: \"100%\" }}>\n          <Paper\n            style={{\n              padding: \"20px\",\n              outline: \"none\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              //   width: \"60%\",\n            }}\n          >\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\n              <Grid item>\n                <TextField\n                  label=\"Name\"\n                  value={profileDetails.name}\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\n                  className={classes.inputBox}\n                  variant=\"outlined\"\n                  fullWidth\n                  style={{ width: \"100%\" }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  label=\"Bio (upto 250 words)\"\n                  multiline\n                  rows={8}\n                  style={{ width: \"100%\" }}\n                  variant=\"outlined\"\n                  value={profileDetails.bio}\n                  onChange={(event) => {\n                    if (\n                      event.target.value.split(\" \").filter(function (n) {\n                        return n != \"\";\n                      }).length <= 250\n                    ) {\n                      handleInput(\"bio\", event.target.value);\n                    }\n                  }}\n                />\n              </Grid>\n              <Grid\n                item\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <PhoneInput\n                  country={\"in\"}\n                  value={phone}\n                  onChange={(phone) => setPhone(phone)}\n                  style={{ width: \"auto\" }}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\n              onClick={() => handleUpdate()}\n            >\n              Update Details\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Profile;\n","C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\recruiter\\MyJobs.js",["159"],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Welcome.js",["160"],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\lib\\apiList.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\lib\\PasswordInput.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\lib\\FileUploadInput.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\lib\\EmailInput.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\Hooks\\useAnimations.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\services.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\servicecard.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\Wave.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\data\\ServiceCardsData.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\Hooks\\useScroll.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\query.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\data\\AccordionData.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\AccordionItem.js",[],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\agent.js",["161"],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\recruteragent.js",["162"],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\ai-interview.js",["163","164","165","166"],"C:\\Users\\pashi\\Downloads\\talented-ai\\frontend\\src\\component\\resume.js",["167","168","169","170"],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":49,"column":3,"nodeType":"177","messageId":"178","endLine":49,"endColumn":9},{"ruleId":"179","severity":1,"message":"180","line":86,"column":11,"nodeType":"181","messageId":"182","endLine":86,"endColumn":35},{"ruleId":"179","severity":1,"message":"183","line":87,"column":10,"nodeType":"181","messageId":"182","endLine":87,"endColumn":19},{"ruleId":"175","severity":1,"message":"184","line":65,"column":3,"nodeType":"177","messageId":"178","endLine":65,"endColumn":14},{"ruleId":"179","severity":1,"message":"185","line":405,"column":9,"nodeType":"181","messageId":"182","endLine":405,"endColumn":17},{"ruleId":"179","severity":1,"message":"186","line":6,"column":3,"nodeType":"181","messageId":"182","endLine":6,"endColumn":8},{"ruleId":"187","severity":1,"message":"188","line":53,"column":6,"nodeType":"189","endLine":53,"endColumn":8,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":164,"column":34,"nodeType":"193","messageId":"178","endLine":164,"endColumn":36},{"ruleId":"175","severity":1,"message":"176","line":44,"column":3,"nodeType":"177","messageId":"178","endLine":44,"endColumn":9},{"ruleId":"194","severity":1,"message":"195","line":120,"column":3,"nodeType":"196","messageId":"197","endLine":138,"endColumn":13},{"ruleId":"179","severity":1,"message":"198","line":227,"column":10,"nodeType":"181","messageId":"182","endLine":227,"endColumn":17},{"ruleId":"179","severity":1,"message":"198","line":210,"column":10,"nodeType":"181","messageId":"182","endLine":210,"endColumn":17},{"ruleId":"179","severity":1,"message":"199","line":7,"column":7,"nodeType":"181","messageId":"182","endLine":7,"endColumn":12},{"ruleId":"175","severity":1,"message":"200","line":194,"column":1,"nodeType":"177","messageId":"178","endLine":194,"endColumn":15},{"ruleId":"175","severity":1,"message":"201","line":219,"column":1,"nodeType":"177","messageId":"178","endLine":219,"endColumn":11},{"ruleId":"179","severity":1,"message":"202","line":375,"column":11,"nodeType":"181","messageId":"182","endLine":375,"endColumn":19},{"ruleId":"179","severity":1,"message":"203","line":169,"column":9,"nodeType":"181","messageId":"182","endLine":169,"endColumn":25},{"ruleId":"179","severity":1,"message":"204","line":320,"column":9,"nodeType":"181","messageId":"182","endLine":320,"endColumn":22},{"ruleId":"179","severity":1,"message":"205","line":377,"column":10,"nodeType":"181","messageId":"182","endLine":377,"endColumn":17},{"ruleId":"179","severity":1,"message":"202","line":380,"column":9,"nodeType":"181","messageId":"182","endLine":380,"endColumn":17},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"no-dupe-keys","Duplicate key 'button'.","ObjectExpression","unexpected","no-unused-vars","'staggerChildrenAnimation' is assigned a value but never used.","Identifier","unusedVar","'isHovered' is assigned a value but never used.","Duplicate key 'statusBlock'.","'colorSet' is assigned a value but never used.","'Modal' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["208"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'jobData' is assigned a value but never used.","'theme' is assigned a value but never used.","Duplicate key 'messageContent'.","Duplicate key 'messageBox'.","'navigate' is assigned a value but never used.","'handleFileChange' is assigned a value but never used.","'previewStyles' is assigned a value but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},"Update the dependencies array to be: [getData]",{"range":"211","text":"212"},[1039,1041],"[getData]"]